<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <groupId>com.yootk</groupId>
  <artifactId>solr</artifactId>
  <packaging>pom</packaging>
  <version>1.0</version>
  <modules>
    <module>dataimport</module>
    <module>solrj</module>
    <module>springdatasolr</module>
  </modules>
  <properties>
    <!-- 进行相关插件的属性定义 -->
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    <maven.compiler.source>1.8</maven.compiler.source>
    <maven.compiler.target>1.8</maven.compiler.target>
    <maven-compiler-plugin.version>3.8.1</maven-compiler-plugin.version>
    <!-- 定义profile的相关处理 -->
    <profiles.dir>src/main/profiles</profiles.dir>   <!-- 定义profiles父路径 -->
    <resources.dir>src/main/resources</resources.dir>   <!-- 定义resources父路径 -->
    <!-- 定义依赖库的版本编号 -->
    <spring.version>5.3.18</spring.version>
    <junit.version>4.12</junit.version>
    <javax.annotation-api.version>1.3.2</javax.annotation-api.version>
    <activemq.version>5.15.9</activemq.version>
    <httpclient.version>4.5.9</httpclient.version>
    <solrj.version>8.1.1</solrj.version>
    <spring-data-solr.version>4.0.9.RELEASE</spring-data-solr.version>
  </properties>
  <dependencyManagement>
    <dependencies>
      <dependency>
        <groupId>org.springframework.data</groupId>
        <artifactId>spring-data-solr</artifactId>
        <version>${spring-data-solr.version}</version>
      </dependency>

      <dependency>
        <groupId>org.apache.solr</groupId>
        <artifactId>solr-solrj</artifactId>
        <version>${solrj.version}</version>
      </dependency>

      <dependency>
        <groupId>org.apache.httpcomponents</groupId>
        <artifactId>httpclient</artifactId>
        <version>${httpclient.version}</version>
      </dependency>

      <dependency>
        <groupId>org.springframework</groupId>
        <artifactId>spring-aspects</artifactId>
        <version>${spring.version}</version>
      </dependency>
      <dependency>
        <groupId>org.springframework</groupId>
        <artifactId>spring-aop</artifactId>
        <version>${spring.version}</version>
      </dependency>

      <dependency>
        <groupId>org.springframework</groupId>
        <artifactId>spring-tx</artifactId>
        <version>${spring.version}</version>
      </dependency>

      <dependency>
        <groupId>javax.annotation</groupId>
        <artifactId>javax.annotation-api</artifactId>
        <version>${javax.annotation-api.version}</version>
      </dependency>

      <dependency>
        <groupId>junit</groupId>
        <artifactId>junit</artifactId>
        <version>${junit.version}</version>
        <scope>test</scope>
      </dependency>
      <dependency>
        <groupId>org.springframework</groupId>
        <artifactId>spring-test</artifactId>
        <version>${spring.version}</version>
        <scope>test</scope>
      </dependency>

      <dependency>
        <groupId>org.springframework</groupId>
        <artifactId>spring-context</artifactId>
        <version>${spring.version}</version>
      </dependency>
      <dependency>
        <groupId>org.springframework</groupId>
        <artifactId>spring-core</artifactId>
        <version>${spring.version}</version>
      </dependency>
      <dependency>
        <groupId>org.springframework</groupId>
        <artifactId>spring-beans</artifactId>
        <version>${spring.version}</version>
      </dependency>
      <dependency>
        <groupId>org.springframework</groupId>
        <artifactId>spring-context-support</artifactId>
        <version>${spring.version}</version>
      </dependency>
    </dependencies>
  </dependencyManagement>
  <profiles>    <!-- 明确的进行具体的资源名称的配置，这个名称是在maven打包的时候使用的名称 -->
    <profile>   <!-- 定义具体的profile引用名称 -->
      <id>dev</id>    <!-- 定义profile名称为dev -->
      <properties>    <!-- 定义当前的profile属性名称 -->
        <profile.dir>${profiles.dir}/dev</profile.dir>
      </properties>
      <activation>    <!-- 如果在编译的时候没有设置任何的profile名字，则此配置生效 -->
        <activeByDefault>true</activeByDefault> <!-- 默认打包环境 -->
      </activation>
    </profile>
    <profile>   <!-- 定义具体的profile引用名称 -->
      <id>test</id>   <!-- 定义profile名称为test -->
      <properties>
        <profile.dir>${profiles.dir}/test</profile.dir>
      </properties>
    </profile>
    <profile>   <!-- 定义具体的profile引用名称 -->
      <id>product</id>   <!-- 定义profile名称为product -->
      <properties>
        <profile.dir>${profiles.dir}/product</profile.dir>
      </properties>
    </profile>
  </profiles>
  <build>
    <finalName>spring</finalName>
    <resources>
      <resource>
        <!-- 此处的属性是profile中统一定义的路径的名称，不同的配置文件有不同的子目录 -->
        <directory>${profile.dir}</directory>
        <filtering>false</filtering>
      </resource>
      <resource>
        <directory>${resources.dir}</directory>
        <filtering>false</filtering>
      </resource>
    </resources>
    <plugins>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-compiler-plugin</artifactId>
        <version>${maven-compiler-plugin.version}</version>
        <configuration>
          <source>${maven.compiler.source}</source>
          <target>${maven.compiler.target}</target>
          <encoding>${project.build.sourceEncoding}</encoding>
        </configuration>
      </plugin>
    </plugins>
  </build>

</project>